package com.hyy.jingweibo.generator;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.hyy.jingweibo.generator.JWBDownloadPics;
import com.hyy.jingweibo.generator.JWBGeo;
import com.hyy.jingweibo.generator.JWBAccount;
import com.hyy.jingweibo.generator.JWBUser;
import com.hyy.jingweibo.generator.JWBStatus;

import com.hyy.jingweibo.generator.JWBDownloadPicsDao;
import com.hyy.jingweibo.generator.JWBGeoDao;
import com.hyy.jingweibo.generator.JWBAccountDao;
import com.hyy.jingweibo.generator.JWBUserDao;
import com.hyy.jingweibo.generator.JWBStatusDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig jWBDownloadPicsDaoConfig;
    private final DaoConfig jWBGeoDaoConfig;
    private final DaoConfig jWBAccountDaoConfig;
    private final DaoConfig jWBUserDaoConfig;
    private final DaoConfig jWBStatusDaoConfig;

    private final JWBDownloadPicsDao jWBDownloadPicsDao;
    private final JWBGeoDao jWBGeoDao;
    private final JWBAccountDao jWBAccountDao;
    private final JWBUserDao jWBUserDao;
    private final JWBStatusDao jWBStatusDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        jWBDownloadPicsDaoConfig = daoConfigMap.get(JWBDownloadPicsDao.class).clone();
        jWBDownloadPicsDaoConfig.initIdentityScope(type);

        jWBGeoDaoConfig = daoConfigMap.get(JWBGeoDao.class).clone();
        jWBGeoDaoConfig.initIdentityScope(type);

        jWBAccountDaoConfig = daoConfigMap.get(JWBAccountDao.class).clone();
        jWBAccountDaoConfig.initIdentityScope(type);

        jWBUserDaoConfig = daoConfigMap.get(JWBUserDao.class).clone();
        jWBUserDaoConfig.initIdentityScope(type);

        jWBStatusDaoConfig = daoConfigMap.get(JWBStatusDao.class).clone();
        jWBStatusDaoConfig.initIdentityScope(type);

        jWBDownloadPicsDao = new JWBDownloadPicsDao(jWBDownloadPicsDaoConfig, this);
        jWBGeoDao = new JWBGeoDao(jWBGeoDaoConfig, this);
        jWBAccountDao = new JWBAccountDao(jWBAccountDaoConfig, this);
        jWBUserDao = new JWBUserDao(jWBUserDaoConfig, this);
        jWBStatusDao = new JWBStatusDao(jWBStatusDaoConfig, this);

        registerDao(JWBDownloadPics.class, jWBDownloadPicsDao);
        registerDao(JWBGeo.class, jWBGeoDao);
        registerDao(JWBAccount.class, jWBAccountDao);
        registerDao(JWBUser.class, jWBUserDao);
        registerDao(JWBStatus.class, jWBStatusDao);
    }
    
    public void clear() {
        jWBDownloadPicsDaoConfig.getIdentityScope().clear();
        jWBGeoDaoConfig.getIdentityScope().clear();
        jWBAccountDaoConfig.getIdentityScope().clear();
        jWBUserDaoConfig.getIdentityScope().clear();
        jWBStatusDaoConfig.getIdentityScope().clear();
    }

    public JWBDownloadPicsDao getJWBDownloadPicsDao() {
        return jWBDownloadPicsDao;
    }

    public JWBGeoDao getJWBGeoDao() {
        return jWBGeoDao;
    }

    public JWBAccountDao getJWBAccountDao() {
        return jWBAccountDao;
    }

    public JWBUserDao getJWBUserDao() {
        return jWBUserDao;
    }

    public JWBStatusDao getJWBStatusDao() {
        return jWBStatusDao;
    }

}
